class LeNet_teachehr(nn.Module):
    def __init__(self):
        super(LeNet_teachehr, self).__init__()
        self.conv1 = nn.Sequential(
            nn.Conv2d(1, 20, 5, padding=0),
            nn.BatchNorm2d(20),
            nn.MaxPool2d(kernel_size=2, stride=2),
        )
        self.conv2 = nn.Sequential(
            nn.Conv2d(20, 50, 5, padding=0),
            nn.BatchNorm2d(50),
            nn.MaxPool2d(2, 2),
        )
        self.conv3 = nn.Sequential(
            nn.Conv2d(50, 500, 4, padding=0),
            nn.BatchNorm2d(500),
            nn.ReLU(),
            nn.Conv2d(500, 10, 1, padding=0),
        )

    # 定义前向传播过程，输入为x
    def forward(self, x):
        x = self.conv1(x)
        x = self.conv2(x)
        x = self.conv3(x)
        x = x.view(x.size()[0], -1) #view类似于numpy的reshape,把一张图展平成D个特征量
        return x
